a=2
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
yy<- 2020
mm <- "Mar"
dd <- 15
event_list<-list(
time=list("yy","mm","dd"),
name="小明",
`是否完成`=TRUE,
`完成所花時間(秒)`=350,
tools=c(
"anchor","axe")
)
event_list
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite)
# course_update2
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
course[[2]][c(5)]<-"teacher"
course_update2<-course[[2]][c(5)]
str(course)
# course_update2
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
course[[2]][c(5)]<-teacher=list("紀學檜")
# course_update2
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
course[[2]][c(5)]<-c(teacher="紀學檜")
course_update2<-course[[2]][c(5)]
str(course)
# course_update2
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
course[[2]][c(5)]<-list(teacher="紀學檜")
course_update2<-course[[2]][c(5)]
str(course)
# course_update2
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
# course_update2
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
# course_update2
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
# course_update2
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite)
# course_update2
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
# course_update2
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
# course_update
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
# course_update
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
course[[2]]$type<-"必"
as.logical(course[[1]])
str(course)
# course_update2
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
course[[2]][c(5)][teacher]<-list(""teacher"")
# course_update2
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
course[[2]][c(5)][teacher]<-list("紀學檜")
# course_update2
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
course[[2]][c(5)]<-teacher=list("紀學檜")
# course_update2
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
course[[2]][c(5)]$teacher<list("紀學檜")
course_update2<-course[[2]][c(5)]
str(course)
# course_update2
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
course[[2]][c(5)]$teacher<list("紀學檜")
course_update2<-course[[2]][c(5)]$teacher
str(course)
# course_update2
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
course[[2]][c(5)]$teacher<list("紀學檜")
course_update2<-course[[2]][c(5)]$teacher
str(course_update2)
# course_update2
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
course[[2]][c(5)]$teacher<list("紀學檜")
course<-course[[2]][c(5)]$teacher
course->course_update2
str(course_update2)
# course_update2
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
course[[2]][c(5)]$teacher<-list("紀學檜")
course<-course[[2]][c(5)]$teacher
course->course_update2
str(course_update2)
# course_update2
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
course[[2]][c(5)]$teacher<-list("紀學檜")
course<-course[[2]][c(5)]$teacher
course->course_update2
str(course_update2)
# course_update2
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
course[[2]][c(5)]$teacher<-list("紀學檜")
course->course_update2
str(course_update2)
# course_update2
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
course$course$teacher<-"紀學檜"
course->course_update2
str(course_update2)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr)
source("https://www.dropbox.com/s/tv16xt8mv11cli7/gujarati.R?dl=1")
print(receipts300[1:30]) # 印前30張
print(numerals_Gujarati)
# sum300
sum(receipts300)->sum300
# sum300
source("https://www.dropbox.com/s/tv16xt8mv11cli7/gujarati.R?dl=1")
print(receipts300[1:30])
sum(receipts300)->sum300
# sum300
source("https://www.dropbox.com/s/tv16xt8mv11cli7/gujarati.R?dl=1")
print(receipts300[1:30])
sum(.randomReceipts )->sum300
# sum300
source("https://www.dropbox.com/s/tv16xt8mv11cli7/gujarati.R?dl=1")
sum(numerals_Gujarati)->sum300
# sum300
source("https://www.dropbox.com/s/tv16xt8mv11cli7/gujarati.R?dl=1")
as.numeric(numerals_Gujarati)
sum(numerals_Gujarati)->sum300
# sum300
source("https://www.dropbox.com/s/tv16xt8mv11cli7/gujarati.R?dl=1")
as.numeric(numerals_Gujarati)->(numerals_Gujarati
sum(numerals_Gujarati)->sum300
# sum300
source("https://www.dropbox.com/s/tv16xt8mv11cli7/gujarati.R?dl=1")
as.numeric(numerals_Gujarati)->numerals_Gujarati
sum(numerals_Gujarati)->sum300
sum300
# sum300
source("https://www.dropbox.com/s/tv16xt8mv11cli7/gujarati.R?dl=1")
as.numeric(numerals_Gujarati)->numerals_Gujarati
sum(numerals_Gujarati)->sum300
sum300
# sum300
source("https://www.dropbox.com/s/tv16xt8mv11cli7/gujarati.R?dl=1")
as.numeric(.randomReceiptsi)->.randomReceipts
# sum300
source("https://www.dropbox.com/s/tv16xt8mv11cli7/gujarati.R?dl=1")
as.numeric(receipts300)->receipts300
sum(receipts300)->sum300
sum300
library(jsonlite); library(readr)
fromJSON("https://www.dropbox.com/s/b59ye5qoxnwhzu9/poem_song.json?dl=1", simplifyDataFrame = F) -> poem_song
fromJSON("https://www.dropbox.com/s/mjvaqdu4gufblag/poem_new.json?dl=1", simplifyDataFrame = F) -> poem_new
read.csv("https://www.dropbox.com/s/oyzvb3d05igb05e/poem_songOrder.csv?dl=1")$x -> poem_songOrder
View(poem_new)
View(poem_song)
View(poem_new)
View(poem_song)
# poem_song
factor(poem_song)
library(jsonlite); library(readr)
fromJSON("https://www.dropbox.com/s/b59ye5qoxnwhzu9/poem_song.json?dl=1", simplifyDataFrame = F) -> poem_song
fromJSON("https://www.dropbox.com/s/mjvaqdu4gufblag/poem_new.json?dl=1", simplifyDataFrame = F) -> poem_new
read.csv("https://www.dropbox.com/s/oyzvb3d05igb05e/poem_songOrder.csv?dl=1")$x -> poem_songOrder
# poem_song
library(jsonlite); library(readr)
fromJSON("https://www.dropbox.com/s/b59ye5qoxnwhzu9/poem_song.json?dl=1", simplifyDataFrame = F) -> poem_song
factor(poem_song)
# poem_song
library(jsonlite); library(readr)
as.factor(poem_song)
# poem_song
library(jsonlite); library(readr)
as.factor(c(poem_song))
View(poem_new)
View(poem_song)
# poem_song
library(jsonlite); library(readr)
[[poem_song]]<-list(poem_songOrder)
# poem_song
library(jsonlite); library(readr)
[poem_song]<-list(poem_songOrder)
# poem_song
library(jsonlite); library(readr)
poem_song$author<-list(poem_songOrder)
# poem_song
library(jsonlite); library(readr)
poem_song$author<-list(poem_songOrder)
# poem_song
poem_song[[137]]<-list(poem_new)
# poem_song
poem_song[[137]]<-list(poem_new)
poem_song
# poem_song
library(jsonlite); library(readr)
poem_song$author<-list(poem_songOrder)
poem_song
# poem_song
poem_song[[22]]$paragraphs<-list("斗柄仙城曉，龍鱗下隰通。 三竿眺羲馭，十里過商中。 水藉天容碧，塵依驛轍紅。 喜聞何力語，應爲樂秋豐。")
poem_song
library(rvest)
source("https://www.dropbox.com/s/6pzodo4967mc9g4/dcardPost.R?dl=1")
View(post)
# post
as.interger(as.factor(post$comments))
# post
as.factor(post$comments$hearts))
# post
as.factor(post$comments$hearts)
# post
as.interger(as.factor(post$comments$hearts))
# post
as.factor(post$comments$hearts))
# post
as.factor(post$comments$hearts)
# post
as.factor(post$comments$hearts)
as.level(post$comments$hearts)
# post
as.factor(post$comments$hearts)
as.levels(post$comments$hearts)
# post
as.factor(post$comments$hearts)
levels(post$comments$hearts)
# post
as.factor(post$comments$hearts)
levels(post$comments$hearts)
# post
as.integer(post$comments$hearts)
# post
as.integer(post$comments$hearts)
as.factor(post$comments$hearts)
# post
as.integer(post$comments$hearts)
as.logical(post$comments$hearts)
# post
as.integer(post$comments$hearts)
as.logical(post$comments$gender)
# post
as.integer(post$comments$hearts)
as.factor(post$comments$gender)
# post
as.integer(post$comments$hearts)
as.factor(post$comments$gender)
class(hearts)
# post
as.integer(post$comments$hearts)
as.factor(post$comments$gender)
class(post$comments$hearts
# post
as.integer(post$comments$hearts)
as.factor(post$comments$gender)
class(post$comments$hearts)
#install.packages("rvest")
a <- "我叫"
b <- c("小明","阿美")
paste0(a,b)
# post
ymd_hms("2020-04-20 14:44:00",
tz="Asia/Taipei")
# post
time<-"2020-04-20 14:44:00"
datetime<-ymd_hms(time,tz="Asia/Taipei")
# post
"2020-04-25 15:50:00"<-poland_time
# post
"2020-04-25 15:50:00"->poland_time
with_tz(poland_time, tzone="UTC")
# post
"2020-04-25 15:50:00"->poland_time
with_tz(poland_time, tzone="Europe/poland")
# post
"2020-04-25 15:50:00"->poland_time
with_tz(tpeTime, tzone="UTC")
# post
"2020-04-25 15:50:00"->poland_time
with_tz(poland_time, tzone="UTC")
# post
"2020-04-25 15:50:00"->poland_time
poland_time<-with_tz(poland_time, tzone="UTC")
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/Lisbon")
poland_time<-with_tz(poland_time, tzone="UTC")
comment[[26]][c(datetime,hearts)]<-list(poland_time,0)
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/poland")
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/Lisbon")
with_tz(poland_time, tzone="UTC")
comment[[26]][c(datetime,hearts)]<-list(poland_time,0)
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/Lisbon")
with_tz(poland_time, tzone="UTC")
comment[[26]][c(datetime,hearts)]<-list("poland_time",0)
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/Lisbon")
with_tz(poland_time, tzone="UTC")->poland
comment[[26]][c(datetime,hearts)]<-list(poland,0)
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/Lisbon")
with_tz(poland_time, tzone="UTC")
comment[[26]][c(datetime,hearts)]<-list(ymd_hms(),0)
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/Lisbon")
with_tz(poland_time, tzone="UTC")
comment[[26]][c(datetime,hearts)]<-list(ymd_hms=(2020-04-25 14:50:00),0)
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/Lisbon")
with_tz(poland_time, tzone="UTC")
comment[[26]][list(datetime,hearts)]<-list(ymd_hms=(2020-04-25 14:50:00),0)
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/Lisbon")
with_tz(poland_time, tzone="UTC")
comment[[26]][list(datetime,hearts)]<-list(ymd_hms(2020-04-25 14:50:00),0)
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/Lisbon")
with_tz(poland_time, tzone="UTC")
library(lubridate)
comment[[26]][list(datetime,hearts)]<-list(ymd_hms(2020-04-25 14:50:00),0)
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/Lisbon")
with_tz(poland_time, tzone="UTC")
comment[[26]][list(datetime,hearts)]<-list(ymd_hms("2020-04-25 14:50:00"),0)
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/Lisbon")
with_tz(poland_time, tzone="UTC")
comment[[25]]->conmment[[26]]
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/Lisbon")
with_tz(poland_time, tzone="UTC")
post$comment[[25]]->post$conmment[[26]]
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/Lisbon")
with_tz(poland_time, tzone="UTC")
comment[[25]]->conmment[[26]]
# post
post$category_dateTime<-NULL
# post
post[category_dateTime]<-NULL
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/poland")
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/Warsaw ")
with_tz(poland_time, tzone="UTC")
comment[[25]]->conmment[[26]]
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/Warsaw ")
with_tz(poland_time, tzone="UTC")
comment[[25]]->conmment[[26]]
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/Warsaw ")
with_tz(poland_time, tzone="UTC")
comment[[25]]->conmment[[26]]
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/Warsaw ")
with_tz(poland_time, tzone="UTC")
comment[[26]][list(gender,datetime,content,hearts)]<-list("男",ymd_hms("2020-04-25 13:50:00"),"心不在課堂上，在哪都做得到遠距",0)
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/Warsaw ")
with_tz(poland_time, tzone="UTC")
comment[[26]][list(gender,datetime,content,hearts)]<-list("男",poland_time,"心不在課堂上，在哪都做得到遠距",0)
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/Warsaw ")
with_tz(poland_time, tzone="UTC")
comment[[26]]<-[list(gender,datetime,content,hearts)]<-list("男",poland_time,"心不在課堂上，在哪都做得到遠距",0)
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/Warsaw ")
with_tz(poland_time, tzone="UTC")
comment[[26]]<-list(gender,datetime,content,hearts)]<-list("男",poland_time,"心不在課堂上，在哪都做得到遠距",0)
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/Warsaw ")
with_tz(poland_time, tzone="UTC")
post$comment[[26]]<-list(gender,datetime,content,hearts)]<-list("男",poland_time,"心不在課堂上，在哪都做得到遠距",0)
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/Warsaw ")
with_tz(poland_time, tzone="UTC")
post$comments[[26]]<-list(gender,datetime,content,hearts)]<-list("男",poland_time,"心不在課堂上，在哪都做得到遠距",0)
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/Warsaw ")
with_tz(poland_time, tzone="UTC")
post$comments[[25]]->post$comments[[26]]
# post
"2020-04-25 15:50:00"->poland_time
poland_time <- mdy_hms("april.25, 2020, 15:50:00",
tz="Europe/Warsaw ")
with_tz(poland_time, tzone="UTC")
post$comments[[26]]<-list("男",poland_time,"心不在課堂上，在哪都做得到遠距",0)
# sum300
sum300<-sum(as.integer(as.factor(receipts300)))
sum300
source("https://www.dropbox.com/s/tv16xt8mv11cli7/gujarati.R?dl=1")
print(receipts300[1:30]) # 印前30張
# sum300
sum300<-sum(as.integer(as.factor(receipts300)))
sum300
# poem_song
library(jsonlite); library(readr)
poem_song[c(poem_songOrder)]->poem_song
# poem_song
library(jsonlite); library(readr)
poem_song[c(poem_songOrder)]->poem_song
poem_song
# post
post[c(5,6,7)]<-null
# post
post[c(5,6,7)]<-NULL
post[(5,6,7)]<-list(post$category_DateTime$category,post$category_DateTime$dateTime,post$category_DateTime$comments)
# post
post[c(5,6,7)]<-NULL
post[c(5,6,7)]<-list(post$category_DateTime$category,post$category_DateTime$dateTime,post$category_DateTime$comments)
# post
post[c(5,6,7)]<-NULL
post[c(5,6,7)]<-list(post$category_DateTime$category,post$category_DateTime$dateTime,post$category_DateTime$comments)
# post
post[c(5,6,7)]<-NULL
post[c(5,6,7)]<-list(post$category_DateTime$category,post$category_DateTime$dateTime,post$category_DateTime$comments)
post
